/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp SQT   &kp COMMA  &kp DOT   &kp P  &kp Y        &kp F    &kp G  &kp C     &kp R  &kp L  &kp BSPC
&kp ESC    &kp A     &kp O      &kp E     &kp U  &kp I        &kp D    &kp H  &kp T     &kp N  &kp S  &kp FSLH
&kp LSHFT  &kp SEMI  &kp Q      &kp J     &kp K  &kp X        &kp B    &kp M  &kp W     &kp V  &kp Z  &kp RCTRL
                                &kp LALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp ESC    &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans    &trans     &trans  &trans
                           &kp LALT  &trans  &kp SPACE    &kp RET   &trans    &kp RGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp ESC    &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LALT  &trans    &kp SPACE    &kp RET    &trans     &kp RGUI
            >;
        };

        adjust_layer {
            bindings = <
&kp TAB     &trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans    &trans  &trans  &kp BACKSPACE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &trans  &trans    &trans  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans    &trans  &trans  &trans
                                        &kp LALT      &trans        &kp SPACE       &kp RETURN  &trans  &kp RGUI
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        raise_and_lower {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
